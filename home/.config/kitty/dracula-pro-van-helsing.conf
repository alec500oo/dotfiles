# Dracula PRO - Van Helsing

#: cursor customization

cursor #f8f8f2
cursor_text_color #414d58

cursor_shape block

#: The cursor shape can be one of block, beam, underline. Note that
#: when reloading the config this will be changed only if the cursor
#: shape has not been set by the program running in the terminal. This
#: sets the default cursor shape, applications running in the terminal
#: can override it. In particular, shell integration
#: <https://sw.kovidgoyal.net/kitty/shell-integration/> in kitty sets
#: the cursor shape to beam at shell prompts. You can avoid this by
#: setting shell_integration to no-cursor.

# cursor_beam_thickness 1.5

#: The thickness of the beam cursor (in pts).

# cursor_underline_thickness 2.0

#: The thickness of the underline cursor (in pts).

# cursor_blink_interval -1

#: The interval to blink the cursor (in seconds). Set to zero to
#: disable blinking. Negative values mean use system default. Note
#: that the minimum interval will be limited to repaint_delay.

# cursor_stop_blinking_after 15.0

#: Stop blinking cursor after the specified number of seconds of
#: keyboard inactivity. Set to zero to never stop blinking.

#: color scheme

foreground #f8f8f2
background #0b0d0f

background_opacity 0.875

# background_tint 0.0

#: How much to tint the background image by the background color. The
#: tint is applied only under the text area, not margin/borders. This
#: option makes it easier to read the text. Tinting is done using the
#: current background color for each window. This option applies only
#: if background_opacity is set and transparent windows are supported
#: or background_image is set.

# dim_opacity 0.75

#: How much to dim text that has the DIM/FAINT attribute set. One
#: means no dimming and zero means fully dimmed (i.e. invisible).

selection_foreground #f8f8f2
selection_background #414d58

#: color table
# dull (normal) first, then bright

#: black
color0 #0b0d0f
color8 #0b0d0f

#: red
color1 #ff9580
color9 #ffaa99

#: green
color2  #8aff80
color10 #a2ff99

#: yellow
color3  #ffff80
color11 #ffff99

#: blue
color4  #9580ff
color12 #aa99ff

#: magenta
color5  #ff80bf
color13 #ff99cc

#: cyan
color6  #80ffea
color14 #99ffee

#: white
color7  #f8f8f2
color15 #ffffff


# mark1_foreground black

#: Color for marks of type 1

# mark1_background #98d3cb

#: Color for marks of type 1 (light steel blue)

# mark2_foreground black

#: Color for marks of type 2

# mark2_background #f2dcd3

#: Color for marks of type 1 (beige)

# mark3_foreground black

#: Color for marks of type 3

# mark3_background #f274bc

#: Color for marks of type 3 (violet)

#: tab bar
tab_bar_edge top

# tab_bar_margin_width 0.0

#: The margin to the left and right of the tab bar (in pts).

tab_bar_margin_height 5.0 3.0

#: The margin above and below the tab bar (in pts). The first number
#: is the margin between the edge of the OS Window and the tab bar.
#: The second number is the margin between the tab bar and the
#: contents of the current tab.

tab_bar_style separator

tab_switch_strategy left

tab_separator "â”‡"
tab_activity_symbol "ðŸ”´"

tab_title_template "{fmt.fg.red}{bell_symbol}{fmt.fg.tab}{activity_symbol} {title} "

#: A template to render the tab title. The default just renders the
#: title with optional symbols for bell and activity. If you wish to
#: include the tab-index as well, use something like: {index}:{title}.
#: Useful if you have shortcuts mapped for goto_tab N. If you prefer
#: to see the index as a superscript, use {sup.index}. All data
#: available is:

#: title
#:     The current tab title.
#: index
#:     The tab index useable with goto_tab N goto_tab shortcuts.
#: layout_name
#:     The current layout name.
#: num_windows
#:     The number of windows in the tab.
#: num_window_groups
#:     The number of window groups (not counting overlay windows) in the tab.
#: tab.active_wd
#:     The working directory of the currently active window in the tab (expensive,
#:     requires syscall).
#: max_title_length
#:     The maximum title length available.

#: Note that formatting is done by Python's string formatting
#: machinery, so you can use, for instance, {layout_name[:2].upper()}
#: to show only the first two letters of the layout name, upper-cased.
#: If you want to style the text, you can use styling directives, for
#: example:
#: `{fmt.fg.red}red{fmt.fg.tab}normal{fmt.bg._00FF00}greenbg{fmt.bg.tab}`.
#: Similarly, for bold and italic:
#: `{fmt.bold}bold{fmt.nobold}normal{fmt.italic}italic{fmt.noitalic}`.
#: Note that for backward compatibility, if {bell_symbol} or
#: {activity_symbol} are not present in the template, they are
#: prepended to it.

active_tab_title_template "{fmt.fg.red}{bell_symbol}{fmt.fg.tab}{activity_symbol} {title} "

#: Template to use for active tabs. If not specified falls back to
#: tab_title_template.

active_tab_foreground   #0b0d0f
active_tab_background   #aa99ff
active_tab_font_style   bold-italic
inactive_tab_foreground #f8f8f2
inactive_tab_background #0b0d0f
inactive_tab_font_style normal
